 source /opt/ros/foxy/setup.bash 
 ros2 run turtlesim turtlesim_node turtlesim baÅŸlatma 
 ros2 run turtlesim turtle_teleop_key yeni terminalde hareket ettirir ya da bunu kullan ./turtle_teleop_custom.py

ros2 node list
ros2 topic list
ros2 service list
ros2 action list


ros2 ortam kurma 
cd ~/ros2_ws/src
yoksa 
mkdir -p ~/ros2_ws/src
cd ~/ros2_ws/src

ros2 pkg create --build-type ament_python package_name

my_package/
â”œâ”€â”€ package.xml
â”œâ”€â”€ resource/my_package
â”œâ”€â”€ setup.cfg
â”œâ”€â”€ setup.py
â””â”€â”€ my_package/
    â””â”€â”€ __init__.py
    
kodu buraya koy 
~/ros2_ws/src/my_package/my_package/

setup.py dosyasÄ±na nodeâ€™larÄ± tanÄ±t
entry_points={
    'console_scripts': [
        'subscriber = my_package.subscriber:main',
        'publisher = my_package.publisher:main',
    ],
},

Burada subscriber ve publisher â†’ terminalden Ã§aÄŸÄ±racaÄŸÄ±n komut,
my_package.subscriber:main â†’ subscriber.py iÃ§indeki main() fonksiyonu.

cd ~/ros2_ws
colcon build
cd ~/ros2_ws
colcon build --packages-select one_package_name


Her yeni terminal aÃ§tÄ±ÄŸÄ±nda Ã§alÄ±ÅŸtÄ±r:
source ~/ros2_ws/install/setup.bash

ros2 run my_package subscriber

ros2 run my_package publisher

ğŸ”¹ 1. EÄŸer tek Python dosyan varsa


Mesela sadece my_node.py dosyan olsun:

~/ros2_ws/src/my_package/my_package/my_node.py iÃ§ine koyarsÄ±n.

setup.py iÃ§inde sadece bir tane entry point yazarsÄ±n:
entry_points={
    'console_scripts': [
        'my_node = my_package.my_node:main',
    ],
},

